<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>409.2</string>
	<key>AMApplicationVersion</key>
	<string>2.5</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string># ----------- BEGIN: CUSTOMIZE HERE
#
# NOTE: Be sure to retain the parenthese around the values, and to have no spaces around "=".

  # The default voices to switch between and the respective confirmation text to speak.
voices=(         Anna           Samantha )
confirmations=( '$newVoice.' '$newVoice' )

  # The default is to give spoken feedback after changing the voice and when errors occur.
  # Set to 0 to disable this, but note that it's helpful to get audible feedback to know when the switch has completed.
voiceFeedback=1

# ----------- END: CUSTOMIZE HERE

# Helper functions. Note that `say` must come *before* `display alert`, because the latter blocks until the dialog is confirmed.
die() { local msg="ERROR: ${1-Aborting due to unexpected error}"; (( voiceFeedback )) &amp;&amp; say "$msg"; osascript -e 'display alert "'"$msg"'" as critical'; exit 1; }
alert() { local msg=$1; (( voiceFeedback )) &amp;&amp; say "$msg"; osascript -e 'display alert "'"$msg"'" as informational';  } 

# This workflow's name, which MUST BE IN SYNC WITH ITS BUNDLE FOLDER'S NAME.
# !! Sadly, we cannot determine the path of the running workflow: $PWD is the user's home folder,
# !! and $0 == '-', and $BASH_SOURCE is empty altogether.
kTHIS_NAME='Switch Default Voice' 

# Make sure that we can locate this workflow.
kTHIS_FULL_PATH=
for parentDir in ~/Library/Services /Library/Services; do
	dir="$parentDir/$kTHIS_NAME.workflow"
	[[ -d $dir ]] &amp;&amp; { kTHIS_FULL_PATH=$dir; break; }
done

[[ -n $kTHIS_FULL_PATH ]] || die "This service workflow is either not currently installed, or had its name changed from '$kTHIS_NAME'."

# Full path to the embedded `voices` CLI, which we manually copied there.
voicesExe=$kTHIS_FULL_PATH/Contents/net.same2u/voices

# Ensure existence of supporting utility
[[ -f $voicesExe ]] || die "Required supporting utility not found: $voicesExe"
# Make executable on demand, if necessary.
[[ -x $voicesExe ]] || chmod +x "$voicesExe" || die "Failed to make supporting utility executable: $voicesExe"

# Determine current default voice.
# !! This should only fail in ONE scenario: a pristine machine on which the default voice was never changed, where
# !! /Users/jdoe/Library/Preferences/com.apple.speech.voice.prefs.plist therefore doesn't reflect the default (no "SelectedVoiceName" entry).
# !! We simply ignore this, and hope that there's truly no other scenario where this fails.
currentVoice=$("$voicesExe" -b)

# Switch to the respective other default voice.

shopt -s nocasematch # Ignor differences in case.

# Determine index of the other voice.
newNdx=0
[[ $currentVoice == "${voices[0]}" ]] &amp;&amp; newNdx=1

# Determine new voice name and confirmation message.
newVoice=${voices[newNdx]}
confirmation=${confirmations[newNdx]//\$newVoice/$newVoice}

# Make the change.
otherOpts=()
(( voiceFeedback )) &amp;&amp; otherOpts=( -k"$confirmation" )
"$voicesExe" "${otherOpts[@]}" -d "$newVoice" || die "Failed to change the default voice."
</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>0</integer>
					<key>shell</key>
					<string>/bin/bash</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>AE15BBDA-7A42-4100-B9F8-D88A8A5C71A4</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>416456E6-6131-4C7C-BE23-84C3BEE9D90A</string>
				<key>UUID</key>
				<string>2C6D6479-49C3-4048-961E-97B36B9BFE91</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>781.000000:866.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
